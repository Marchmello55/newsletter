from config_data.client import client
import logging


# –ö—ç—à–∏—Ä—É–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ
owner_info = None


async def get_owner_info():
    """–ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ"""
    global owner_info
    if owner_info is None:
        me = await client.get_me()
        owner_info = {
            'id': me.id,
            'username': me.username,
            'first_name': me.first_name,
            'last_name': me.last_name,
            'phone': me.phone
        }
    return owner_info


async def is_owner(event):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å - –≤–ª–∞–¥–µ–ª–µ—Ü"""
    owner = await get_owner_info()
    return event.sender_id == owner['id']


async def owner_filter(event):
    """–§–∏–ª—å—Ç—Ä —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    owner = await get_owner_info()
    is_owner = event.sender_id == owner['id']

    if not is_owner:
        logging.info(f"üö´ –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –æ—Ç {event.sender_id} (–Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü)")

    return is_owner